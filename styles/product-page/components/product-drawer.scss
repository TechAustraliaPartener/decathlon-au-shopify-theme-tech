/*
 * @pattern Slide-in Drawer
 * Consider converting this into a pattern in the future.
 *
 * A slide-in overlay pattern, suitable for displaying additional content,
 * equipped with `overflow-y` scrolling.
 *
 * Placing content inside of this pattern is often not the most appropriate
 * choice for displaying content and can lead to poor user experiences when used
 * improperly. Consider usage of this pattern wisely.
 *
 * 1. Ensures element is not overlapped by `Drawer-header`
 * 2. Fixed positioning is required for both the `transform` and `overflow-y`
 * scrolling to work properly.
 * 3. Places the component off-canvas an equal distance to the available
 * viewport width. Necessary for the "slide-in/slide-out" effect
 */

 /*
    Additional styles from updated drawer
 */
 
.de-PostAddToCart {
  display: block;
}

.de-CartItemInfo-grid {
  display: grid;
  grid-template-areas:
    "images price"
    ". message";
  grid-template-columns: auto 1fr;
}

.de-ProductThumbnail {
  max-height: 64px;
  max-width: 64px;
}

.de-lineMessage {
  svg {
    position: relative;
    top: 8px;
  }
}

.de-PostAddToCart-FrequentlyBought {
  .trendingProducts {
    display: flex;
    flex-wrap: wrap;
    padding: 0;
    border-bottom: 0;
  }
  .de-ProductTile {
    max-width: 50%;
  }
  .de-ProductTile.de-is-loading * {
    display: none;
  }
  .de-ProductTile.de-is-loading {
    background-color: #f3f3f3;
    border: none;
    height: 400px;
    margin-bottom: 2em;
    padding: 1em !important;
    position: relative;
  }
  .de-ProductTile-title {
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: break-word;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .product-tile-shipping-info,
  .de-ProductTile-inventoryStatus,
  footer {
    display: none;
  }
}

.de-CartItemInfo-images.de-is-loading *,
.de-CartSubtotal.de-is-loading *,
.de-FreeShippingIndicator.de-is-loading * {
  display: none;
}

.de-CartSubtotal.de-is-loading {
  border: 0;
  height: 190px;
  background-color: #f3f3f3;
  padding: 1em;
}

.de-FreeShippingIndicator.de-is-loading {
  background-color: #f3f3f3;
  border: none;
  height: 176px;
  margin-bottom: 2em;
  padding: 1em !important;
}

.de-DrawerSubtotalDiscount {
  & > span {
    color: #e53322;
  }
}

.de-PostAddToCart-featuredProducts {
  display: flex;
  flex-direction: row;
}

.de-ProductTileDrawer {
  max-width: 235px;
}

.de-productTile-showcaseImageContainer {
  height: 0;
  overflow: hidden;
  padding-top: 100%;
  position: relative;
}

.de-ProductTileDrawer-showcaseImage {
  left: 50%;
  max-height: 100%;
  position: absolute;
  top: 0;
  transform: translateX(-50%);
}

.de-postAddToCart-pricerow--sm {
  display: flex;
}

.de-postAddToCart-pricerow--md {
  display: none;
}

.de-Skeleton.de-is-loading::after {
  animation: pulse 1.5s linear infinite;
  animation-delay: 1s;
  background-image:
    linear-gradient(#ddd 36px, transparent 0),
    linear-gradient(#ddd 28px, transparent 0),
    linear-gradient(#ddd 28px, transparent 0);
  background-repeat: no-repeat;
  background-size:
    90% 24px,
    65% 16px,
    50% 16px;
  background-position:
    0 0px,
    0 40px,
    0 70px;
    content: '';
    display: block;
    height: 100%;
    width: 100%;
}

@media (min-width: $breakpoint-md) {
  .de-postAddToCart-pricerow--sm {
    display: none;
  }
  .de-postAddToCart-pricerow--md {
    display: flex;
  }
}

@media (min-width: 1100px) {
  .de-PostAddToCart {
    display: grid;
    grid-template-columns: 50% 46%;
    grid-gap: 4%;
  }
  .de-PostAddToCart-FrequentlyBought {
    .de-ProductTile {
      max-width: 25%;
    }
  }
}

/**
 * Base Drawer overlay styles
 */

 .de-Drawer-overlay {
  background-color: rgba(172, 179, 184, 0.5);
  opacity: 0;
  position: absolute;
  transition: opacity $transition-speed-normal $transition-easing-smooth;
}

/**
 * Styles for the overlay behind the Drawer when it is open
 *
 * 1. This value is one below the .de-Drawer z-index to make sure the overlay
 *    falls beneath the Drawer content
 */

.de-Drawer.de-is-active .de-Drawer-overlay {
  height: 100%;
  left: 0;
  opacity: 1;
  top: 0;
  width: 100%;
  z-index: 1999; /* 1 */
}

/**
 * Apply these properties to drawer content that isn't currently being
 * displayed in regular page flow
 */

.de-Drawer:not(.de-is-inPageFlow) .de-Drawer-contentWrapper {
  background-color: $color-white;
  height: 100%;
  max-width: 90%;
  padding-top: $header-height-sm; /* 1 */
  position: fixed; /* 2 */
  right: 0;
  top: 0;
  transform: translateX(100vw); /* 3 */
  transition: transform $transition-speed-normal $transition-easing-smooth;
  width: 100vw;
  z-index: 2000;
}

@media (min-width: $breakpoint-md) {
  .de-Drawer:not(.de-is-inPageFlow) .de-Drawer-contentWrapper {
    max-width: 70%;
  }
}

@media (min-width: $breakpoint-lg) {
  .de-Drawer:not(.de-is-inPageFlow) .de-Drawer-contentWrapper {
    max-width: 50%;
  }
}

@media (min-width: $breakpoint-lg) {
  .de-Drawer:not(.de-is-inPageFlow) .de-Drawer--extraWide {
    max-width: 80% !important;
  }
}

/**
 * 1. A magic number is being used to acheive a specific visual goal of
 *    exactly covering another element, no-more, no-less.
 */

@media (min-width: $breakpoint-xl) {
  .de-Drawer:not(.de-is-inPageFlow) .de-Drawer-contentWrapper {
    max-width: 48.5%; /* 1 */
  }
}

/**
 * Disable timed transitions for drawers that will show
 * content also shown in regular page flow.
 * The extra class applied to these drawers will be managed at the appropriate
 * time by JavaScript
 *
 * Allows the "displays_in_page_flow" content option to transition smoothly
 * when opening and closing, same as the standard drawer
 * (whose position is never switched to "static")
 */

.de-Drawer--contentFromPageFlow.de-is-closed .de-Drawer-contentWrapper,
.de-Drawer--contentFromPageFlow.de-is-opening .de-Drawer-contentWrapper {
  transition: transform 0s;
}

/**
 * Re-enable default transition duration for the "displays_in_page_flow" drawer
 * option, when also in active (open) state
*/

.de-Drawer--contentFromPageFlow.de-is-open .de-Drawer-contentWrapper {
  transition: transform $transition-speed-normal;
}

/*
 * 1. When "active", slide the component into the viewport
 */

.de-Drawer.de-is-active .de-Drawer-contentWrapper {
  transform: translateX(0); /* 1 */
}

/*
 * Switch to static positioning for keeping drawer content in page flow, when
 * using the is-in-page-flow option
 */

.de-Drawer.de-is-inPageFlow .de-Drawer-contentWrapper {
  position: static;
}

.de-Drawer-header {
  border-bottom: $border-width-sm solid $color-light-gray;
  display: flex;
  height: $header-height-sm;
  left: 0;
  letter-spacing: 0.5px;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 3000;
}

@media (min-width: $breakpoint-md) {
  .de-Drawer-header {
    height: $header-height-md;
  }
}

/*
 * Hide the header for content that is being displayed in page flow
 */

.de-Drawer.de-is-inPageFlow .de-Drawer-header {
  display: none;
}

/*
 * 1. Enables momentum-based scrolling, where the content continues to scroll
 *    for a while after finishing the scroll gesture and removing your finger
 *    from the touchscreen. The speed and duration of the continued scrolling
 *    is proportional to how vigorous the scroll gesture was. Also creates a
 *    new stacking context. Support: Safari iOS.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS -webkit-overflow-scrolling
 *
 * 2. Matches the padding added when using the utility class '.de-u-pad'
 *
 * Applies only to drawer content displayed in an open drawer, not when
 * displayed in regular page flow
 */

.de-Drawer:not(.de-is-inPageFlow) .de-Drawer-content {
  height: 100%;
  overflow-y: scroll;
  padding: 1rem; /* 2 */
  -webkit-overflow-scrolling: touch; /* 1 */
}

/*
 * 1. Ensures the last direct descendant of `Drawer-content` receives spacing at
 *    the bottom of the scrollable content equal to the height
 *    of`Drawer-header`
 *
 * @TODO - Consider any future ways to reduce specificity here
 */

.de-Drawer:not(.de-is-inPageFlow) .de-Drawer-content > *:last-child {
  margin-bottom: 0; /* 1 */
  padding-bottom: $header-height-sm; /* 1 */
}
