/**
 * @TODO
 * This CSS will be copied/pasted into `product.scss.liquid` once this work
 * is complete
 */

/**
 * Color Palette
 * Variable names are based on similar CSS extended color keyword values.
 *
 * @see https://www.w3.org/TR/2018/REC-css-color-3-20180619/#svg-color
 */

$color-gray: #acb3b8;
$color-light-gray: rgba(172, 179, 184, 0.5);
$color-white: #fff;

/**
 * Border Width
 */

$border-width-sm: 1px;
$border-width-md: 2px;
$border-width-lg: 3px;
$border-width-xl: 6px;
 
/**
 * Media Queries
 */
 
$breakpoint-sm: 30em;
$breakpoint-md: 40em;
$breakpoint-lg: 60em;
$breakpoint-xl: 80em;

/**
 * Transitions
 *
 * 1. $transition-speed-normal value must match the value in
 *    associated JS (in milliseconds, with setTimeout) for transition duration
 *    @see scripts/product-page/drawer.js
 */

$transition-speed-normal: 0.2s; /* 1 */
$transition-easing-smooth: cubic-bezier(0.77, 0, 0.175, 1);

/**
 * Sizes
 */

$header-height: 46px;

/**
 * @TODO:
 * The following CSS will be copied/pasted into `product.scss.liquid`
 * once complete
 */

/*
 * @pattern Slide-in Drawer
 * Consider converting this into a pattern in the future.
 *
 * A slide-in overlay pattern, suitable for displaying additional content,
 * equipped with `overflow-y` scrolling.
 *
 * Placing content inside of this pattern is often not the most appropriate
 * choice for displaying content and can lead to poor user experiences when used
 * improperly. Consider usage of this pattern wisely.
 *
 * 1. Ensures element is not overlapped by `Drawer-header`
 * 2. Fixed positioning is required for both the `transform` and `overflow-y`
 * scrolling to work properly.
 * 3. Places the component off-canvas an equal distance to the available
 * viewport width. Necessary for the "slide-in/slide-out" effect
 *
 * @TODO:
 * 1. Complete: ~small screen 100vw via `transform: translateX(0);`~
 * 2. Pending: large screen partial vw via transform
 *
 */

/**
 * Drawer variables
 *
 * 1. Width matches the width of the Buy Box - which is the desired width of
 *    of the active drawer - no more, no less.
 */

$drawer-max-width: 43.333%; /* 1 */

/**
 * Base Drawer overlay styles
 */

.de-Drawer-overlay {
  background-color: rgba(172, 179, 184, 0.5);
  opacity: 0;
  position: absolute;
  transition: opacity $transition-speed-normal $transition-easing-smooth;
}

/**
  * Styles for the overlay behind the Drawer when it is open
  *
  * 1. This value is one below the .de-Drawer z-index to make sure the overlay
  *    falls beneath the Drawer content
  */

.de-Drawer.de-is-active .de-Drawer-overlay {
  height: 100%;
  left: 0;
  opacity: 1;
  top: 0;
  width: 100%;
  z-index: 1999; /* 1 */
}

/**
 * Apply these properties to drawer content that isn't currently being
 * displayed in regular page flow
 */

.de-Drawer:not(.de-is-inPageFlow) .de-Drawer-contentWrapper {
  background-color: $color-white;
  height: 100%;
  max-width: 90%;
  right: 0;
  padding-top: $header-height; /* 1 */
  position: fixed; /* 2 */
  top: 0;
  transform: translateX(100vw); /* 3 */
  transition: transform $transition-speed-normal $transition-easing-smooth;
  width: 100vw;
  z-index: 2000;
}


@media (min-width: $breakpoint-md) {
  .de-Drawer:not(.de-is-inPageFlow) .de-Drawer-contentWrapper {
    max-width: 70%;
  }
}

@media (min-width: $breakpoint-lg) {
  .de-Drawer:not(.de-is-inPageFlow) .de-Drawer-contentWrapper {
    max-width: $drawer-max-width;
  }
}

/**
 * Drawer modifier, changes the transition from default RTL to custom LTR
 */

.de-Drawer--transitionLeftToRight:not(.de-is-inPageFlow)
  .de-Drawer-contentWrapper {
  left: 0;
  transform: translateX(-100vw);
}

/**
 * Disable timed transitions for drawers that will show
 * content also shown in regular page flow.
 * The extra class applied to these drawers will be managed at the appropriate
 * time by JavaScript
 *
 * Allows the "displays_in_page_flow" content option to transition smoothly when opening
 * and closing, same as the standard drawer (whose position is never switched to
 * "static")
 */

.de-Drawer--contentFromPageFlow.de-is-closed .de-Drawer-contentWrapper,
.de-Drawer--contentFromPageFlow.de-is-opening .de-Drawer-contentWrapper {
  transition: transform 0s;
}

/**
 * Re-enable default transition duration for the "displays_in_page_flow" drawer
 * option, when also in active (open) state
 */

.de-Drawer--contentFromPageFlow.de-is-open .de-Drawer-contentWrapper {
  transition: transform $transition-speed-normal;
}

/*
 * 1. When "active", slide the component into the viewport
 */

.de-Drawer.de-is-active .de-Drawer-contentWrapper {
  transform: translateX(0); /* 1 */
}

/*
 * Switch to static positioning for keeping drawer content in page flow, when
 * using the is-in-page-flow option
 */

.de-Drawer.de-is-inPageFlow .de-Drawer-contentWrapper {
  position: static;
}

.de-Drawer-header {
  border-bottom: $border-width-sm solid $color-light-gray;
  display: flex;
  height: $header-height;
  left: 0;
  letter-spacing: 0.5px;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 3000;
}

/*
 * Hide the header for content that is being displayed in page flow
 */

.de-Drawer.de-is-inPageFlow .de-Drawer-header {
  display: none;
}

/*
 * 1. Enables momentum-based scrolling, where the content continues to scroll
 *    for a while after finishing the scroll gesture and removing your finger from
 *    the touchscreen. The speed and duration of the continued scrolling is
 *    proportional to how vigorous the scroll gesture was. Also creates a new
 *    stacking context. Support: Safari iOS.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling
 *
 * 2. Matches the padding added when using the utility class '.de-u-pad'
 *
 * Applies only to drawer content displayed in an open drawer, not when displayed
 * in regular page flow
 */

.de-Drawer:not(.de-is-inPageFlow) .de-Drawer-content {
  height: 100%;
  overflow-y: scroll;
  padding: 1rem; /* 2 */
  -webkit-overflow-scrolling: touch; /* 1 */
}

/*
 * 1. Ensures the last direct descendant of `Drawer-content` receives spacing at
 *    the bottom of the scrollable content equal to the height of `Drawer-header`
 *
 * @TODO - Consider any future ways to reduce specificity here
 */

.de-Drawer:not(.de-is-inPageFlow) .de-Drawer-content > *:last-child {
  margin-bottom: 0; /* 1 */
  padding-bottom: $header-height; /* 1 */
}

/*
 * States
 */

/*
 * 1. Prevents unwanted scrolling of content covered by `Drawer`
 */

.de-content-is-fixed {
  overflow: hidden; /* 1 */
  position: fixed; /* 1 */
}
