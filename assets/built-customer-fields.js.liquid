import './built-toConsumableArray-0fbe23f7.js';

jQuery(document).ready(function () {
  jQuery('#cf_accept_terms').on('change', function () {
    if (jQuery('#cf_accept_terms').is(':checked')) {
      jQuery('#cf_accept_terms').prop("checked", true);
      jQuery('#cf_accept_terms').val('true');
    } else {
      jQuery('#cf_accept_terms').prop("checked", false);
      jQuery('#cf_accept_terms').val('');
    }
  });

  function getCookie(name) {
    var cookieArr = document.cookie.split(";");

    for (var i = 0; i < cookieArr.length; i++) {
      var cookiePair = cookieArr[i].split("=");

      if (name == cookiePair[0].trim()) {
        return decodeURIComponent(cookiePair[1]);
      }
    }
  }

  jQuery('#settingAccountSpiner').show();

  if (getCookie('is_from_registration') && window.vars.has_accepted_marketing) {
    jQuery('.registration-confirm-message').show();
    document.cookie = "is_from_registration=; max-age=0";
  }

  jQuery('input, select').on('blur', function () {
    jQuery(this).removeClass('error');
  });
  jQuery('#editDetails').click(function (e) {
    e.preventDefault();
    jQuery('#detailsDisplay').fadeOut(200, function () {
      jQuery('#accountEdit').fadeIn();
    });
  });
  jQuery('.show_edit_form').click(function (e) {
    e.preventDefault();
    jQuery('#editDetails').click();
  });
  jQuery('#updateMarketing').click(function (e) {
    e.preventDefault();
    jQuery('[data-marketing-hide]').hide();
    jQuery('[data-marketing-show]').show();
    jQuery('#detailsDisplay').fadeOut(200, function () {
      jQuery('#accountEdit').fadeIn();
    });
  });
  jQuery(document).on('click', '#cancelEditAccount', function (e) {
    e.preventDefault();
    jQuery('#accountEdit').fadeOut(200, function () {
      jQuery('[data-marketing-hide]').show();
      jQuery('[data-marketing-show]').hide();
      jQuery('#detailsDisplay').fadeIn();
    });
  });
  jQuery(document).on('change', '#cf_accept_marketing', function (e) {
    if (jQuery('#cf_accept_marketing').is(':checked')) {
      jQuery('#cf_accept_marketing').prop("checked", true);
      jQuery('#cf_accept_marketing').val('true');
    } else {
      jQuery('#cf_accept_marketing').prop("checked", false);
      jQuery('#cf_accept_marketing').val('');
    }
  });
  document.addEventListener('cf:customer_saved', function (event) {
    setTimeout(function () {
      window.location.reload();
    }, 2000);
  });
  var checkbox_accept_marketing = setInterval(function () {
    if (jQuery('[data-cf-loaded]').length) {
      jQuery('#settingAccountSpiner').hide();

      if (jQuery('#cf_accept_marketing').attr('checked')) {
        jQuery('#cf_accept_marketing').prop("checked", true);
        jQuery('#cf_accept_marketing').val('true');
        clearInterval(checkbox_accept_marketing);
      }
    }
  }, 100);
  var hasError = false,
      errorMessage = [],
      $accept_terms = jQuery('input[name="customer[accepts_terms_conditions]"]');
  jQuery('#cf_phone_number').on('input', function () {
    this.value = parseInt(this.value.replace(/[^0-9]/g, ''), 10) || '';
  });
  jQuery('input[name="customer[postcode]"]').on('input', function () {
    this.value = parseInt(this.value.replace(/[^0-9]/g, ''), 10) || '';
  });

  function validate() {
    errorMessage = [];
    jQuery('#cf_form_custom .required').each(function () {
      if (!jQuery(this).val() || jQuery(this).val() === '') {
        errorMessage.push('error: ' + jQuery(this).attr("name"));
        jQuery(this).addClass('error');
      } else {
        jQuery(this).removeClass('error');
      }
    });

    if (!jQuery('#cf_accept_terms').is(':checked')) {
      jQuery('#cf_accept_terms').addClass('error');
      errorMessage.push('error');
    } else {
      jQuery('#cf_accept_terms').removeClass('error');
    }

    hasError = errorMessage.length ? true : false;
  }

  jQuery('.btn-submit-cf').on('click', function (e) {
    jQuery('#cf_phone_number_hidden').val('+61' + jQuery('#cf_phone_number').val());
    var customerEmail = window.vars.customerEmail;

    if (jQuery('#accountInfo').length) {
      document.cookie = "is_from_registration=1; max-age=" + 60 * 5;
    }

    validate();

    if (!hasError) {
      jQuery('#accountEditSpiner').show();
      jQuery('html, body').animate({
        scrollTop: 0
      }, 100);
      return true;
    }

    return false;
  });
  jQuery('.general-popup .modal_close').on('click', function () {
    var $popup = jQuery(this).parents('.general-popup');
    $popup.hide();

    if ($popup.attr('id') === 'welcomePopup') {
      location.reload();
    }
  });
  jQuery('.general-popup .modal_background').on('click', function () {
    var $popup = jQuery(this).parents('.general-popup');
    $popup.hide();

    if ($popup.attr('id') === 'welcomePopup') {
      location.reload();
    }
  });
  jQuery('[data-open-popup]').on('click', function () {
    var $popup = jQuery(jQuery(this).attr('href'));
    $popup.show();
  });
  var address_input = document.getElementById('google_address');
  var options = {
    types: ['address'],
    componentRestrictions: {
      country: 'au'
    }
  };
  var autocomplete = new google.maps.places.Autocomplete(address_input, options);
  autocomplete.addListener('place_changed', fillAddress);

  function fillAddress() {
    var place = autocomplete.getPlace();
    var streetNumber, streetName, suburb, city, regionName, regionCode, postalCode;
    place.address_components.forEach(function (item) {
      if (item.types.includes('street_number')) {
        streetNumber = item.long_name;
      }

      if (item.types.includes('route')) {
        streetName = item.long_name;
      }

      if (item.types.includes('locality')) {
        suburb = item.long_name;
      }

      if (item.types.includes('administrative_area_level_2')) {
        city = item.short_name;
      }

      if (item.types.includes('administrative_area_level_1')) {
        regionName = item.long_name;
        regionCode = item.short_name;
      }

      if (item.types.includes('postal_code')) {
        postalCode = item.long_name;
      }
    });
    jQuery('input[name="customer[addresses][address1]"]').val(streetNumber + " " + streetName);
    jQuery('input[name="customer[addresses][city]"]').val("" + suburb);
    jQuery('input[name="customer[postcode]"]').val("" + postalCode);
    jQuery('select[name="customer[addresses][province]"]').val(regionName);
  }
});
