/**
 * @TODO
 * The final Product Page CSS will be copied/pasted into this file
 *
 * Any shared CSS styles can be added to this file from the beginning.
 */

/**
 * Color Palette
 *
 * Variable names are based on similar CSS extended color keyword values.
 *
 * @see https://www.w3.org/TR/2018/REC-css-color-3-20180619/#svg-color
 */

/**
 * @TODO
 * 1. Find and replace duplicate colors with different names
 *    $color-light-gray and $color
 */

$color-black: #2a2b2c;
$color-blue: #0082c3;
$color-darkgray: #464646;
$color-gray: #acb3b8;
$color-light-gray: rgba(172, 179, 184, 0.5);
$color-gray50: rgba(172, 179, 184, 0.5);
$color-lime: #cbfb00;
$color-silver: #f3f3f3;
$color-white: #fff;
$color-red: #e53322;

/**
 * Border Width
 */

$border-width-sm: 1px;
$border-width-md: 2px;
$border-width-lg: 3px;
$border-width-xl: 6px;

/**
 * Media Queries
 */

$breakpoint-sm: 30em;
$breakpoint-md: 40em;
$breakpoint-lg: 60em;
$breakpoint-xl: 80em;

/**
 * Transitions
 *
 * 1. $transition-speed-normal value must match the value in
 *    associated JS (in milliseconds, with setTimeout) for transition duration
 *    @see scripts/product-page/drawer.js
 */

$transition-speed-normal: 0.2s; /* 1 */
$transition-easing-smooth: cubic-bezier(0.77, 0, 0.175, 1);

/**
 * Sizes
 */

$header-height-sm: 46px;
$header-height-md: 52px;

figure {
  margin: 0;
}

/**
 * Product Page Wrapper
 */

.de-Wrapper {
  padding-left: 1rem;
  padding-right: 1rem;
}

/**
 * Full width Wrapper modifier
 *
 * Full width container inside a limited width parents. No calc() needed.
 * @see https://css-tricks.com/full-width-containers-limited-width-parents/#article-header-id-6
 */

/*
 * 1. Offset by .01 so that media query range does not overlap with other media queries
 */
@media (max-width: $breakpoint-lg - .01 /* 1 */) {
  .de-Wrapper--fullwidth {
    width: 100vw;
    position: relative;
    left: 50%;
    right: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
  }
}

/*
 * ProductFlag
 */

.de-ProductFlag {
  line-height: 1.2;
  text-transform: uppercase;
  padding: 0.38125em 0.75375em;
  z-index: 1;
  position: absolute;
  top: 0;
  right: 0;
}

/**
 * ProductMenu
 *
 * 1. The height in pixels of the fixed position, `de-PageWrap-header` element,
 *    which is the element that this component must "stick" beneath.
 * 2. Setting the `z-index` value to `1999` ensures the product menu will display
 *    below the 'Drawer' overlay which has a z-index of `2000`, while at the
 *    same time making it more difficult for other elements to appear on top of
 *    the sticky `ProductMenu` component.
 * 3. This component is not intended to be displayed for small screens. Setting
 *    display none here because of known "issue" with `de-u-hidden` not working
 *    well with responsive display flex utilities.
 *
 * Note: position sticky is not supported in IE11. This component will degrade
 * gracefully and the non-sticky experience has been deemed acceptable for
 * this component.
 */

.de-ProductMenu {
  background-color: $color-white;
  border-top: $border-width-sm solid $color-gray50;
  border-bottom: $border-width-sm solid $color-gray50;
  display: none; /* 3 */
  justify-content: center;
  position: sticky;
  top: 58px; /* 1 */
  z-index: 1999; /* 2 */
}

@media (min-width: $breakpoint-md) {
  .de-ProductMenu {
    display: flex;
  }
}

/**
 * Using viewport width units provides an ideal flexible padding between
 * menu items and padding is incremented as the browser width changes. The
 * numerical value is one of pure aesthetic preference and may need to be
 * adjusted in the future.
 */

.de-ProductMenu .de-MenuBar-action {
  padding-left: 2vw;
  padding-right: 2vw;

  @media (min-width: $breakpoint-lg) {
    padding-left: 3vw;
    padding-right: 3vw;
  }

  @media (min-width: $breakpoint-xl) {
    padding-left: 4vw;
    padding-right: 4vw;
  }
}

.de-ProductMenu .de-MenuBar-action.de-is-active {
  color: $color-blue;
}

/**
 * Pseudo-element for underline
 */

.de-ProductMenu .de-MenuBar-action.de-is-active:after {
  display: block;
}

/**
 * A unique solution for anchor links for use when fixed or sticky menus are
 * present. Adding this class to an element directly preceding the element, or
 * as the first-child inside of the element you'd like to link to, will ensure
 * the context does not become hidden behind the fixed/sticky header element.
 *
 * The method of assigning a negative integer for margin, and the same
 * (non-negative) integer for padding ensures that a gap in the content does
 * not exist.
 *
 * @see: https://css-tricks.com/hash-tag-links-padding
 *
 * 1. The value `130px` was determined by adding the height of both the primary
 *    navigation and the product page sticky menu plus a tiny bit extra for a
 *    more comfortable anchor navigation experience - making it a bit of a
 *    magic number
 */
.de-ProductAnchor {
  display: block;
  margin-top: -130px;
  padding-top: 130px;
}

/**
 * ProductInfoSection
 */

.de-ProductInfoSection {
  border-top: $border-width-xl solid $color-silver;
}

.de-ProductInfoSection:last-of-type {
  border-bottom: $border-width-xl solid $color-silver;
}

@media (min-width: $breakpoint-md) {
  .de-ProductInfoSection {
    border: 0;
  }
}

.de-ProductInfoSection--silver {
  background-color: $color-white;
}

@media (min-width: $breakpoint-md) {
  .de-ProductInfoSection--silver {
    background-color: $color-silver;
  }
}

.de-ProductInfoTitle {
  border-bottom: $border-width-lg solid $color-lime;
  padding-bottom: 5px;
  margin: 0;
}

/**
 * Sub brand logos
 *
 * 1. Warning: Magic numbers at work.
 *
 * @TODO
 * Consider moving width and height values to SVG
 */

.de-LogoSportsBrand {
  height: 100%;
  height: 22px; /* 1 */
}

.de-DecathlonChatBubble {
  width: 124px;
}

.ProductFeature-icon {
  filter: grayscale(1);
  flex: 1 0 auto;
  max-width: 60px;
  width: 50px;
}

/**
 * StorePickup
 *
 * This CSS is in-progress and will be improved upon and commented on in
 * a follow-up PR
 */

.StorePickup-header {
  border-bottom: $border-width-md solid $color-silver;
}

.StorePickup-thumbnail {
  flex: 0 0 80px;
}

.StorePickup-tile {
  margin-bottom: 0.75rem;
  padding-bottom: 0.75rem;
  border-bottom: $border-width-sm solid $color-silver;
}

.StorePickup-tile:last-of-type {
  border-bottom: $border-width-md solid $color-lime;
  margin-bottom: 0;
}

/**
 * Utilities
 *
 * @TODO
 * 1. Update patterns library with this class
 */

.de-u-textRed {
  /* 1 */
  color: $color-red !important;
}

.de-u-textLower {
  text-transform: lowercase !important;
}

.de-u-textSelectNone {
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
  -webkit-user-select: none !important;
}

.de-u-fullwidth {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}

.de-u-overflowYHidden {
  overflow-y: hidden !important;
}

.de-u-cursorGrab {
  cursor: grab;
}

.de-u-overflowXNone {
  overflow-x: hidden !important;
}

/**
 * Duplicate utility exists in store-finder.scss
 *
 * 1. Consolidate by moving to pattern library utility before launching
 *    product page.
 */

.de-u-cursorPointer {
  cursor: pointer; /* 1 */
}

.de-u-textUnderline {
  text-decoration: underline !important;
}


/**
 * ProductInformation
 */

.ProductInformation {
  columns: 370px 3;
  column-gap: 36px;
}

.ProductInformation-entry {
  break-inside: avoid;
  margin-bottom: 2rem;
}

@media (min-width: $breakpoint-md) {
  .ProductInformation-entry:not(:first-of-type) {
    margin-top: 3rem;
  }
}

/**
 * Size Guide
 */

@media (min-width: $breakpoint-md) {
  .de-SizeGuide .de-is-inPageFlow {
    display: none;
  }
}

.SizeGuide-table {
  overflow-x: auto;

  .esc-size-guide--row:first-child {
    background: $color-silver;
    font-family: "avalon_mediumbold","HelveticaNeue","Helvetica Neue",Helvetica,Arial,sans-serif;
  }

  .esc-size-guide--row:nth-child(2n+3) {
    background: #f9f9f9;
  }

  .esc-size-guide--cell,
  .esc-size-guide--heading {
    text-align: center;
  }

  .esc-size-guide--heading {
    text-transform: uppercase;
  }

  p,
  .esc-size-guide--title,
  .esc-size-guide--cell-type--text {
    font-size: 16px;
  }
}

/**
 * Hacks
 *
 * Removes floating green email me button
 */

.bis-reset,
.bis-button,
.bis-button.BIS_trigger {
  display: none !important;
  opacity: 0;
}

/**
 * ProductBackToTop
 *
 * 1. The desired visual height for the element. Visually dependant on this
 *    component's border-radius value.
 * 2. The desired border-radius value for the component. Visually dependant on
 *    this component's height value. Border-radius does not accept unitless
 *    values however this value is being used in calc() function, so the
 *    unitless value is required.
 * 3. Ensures the underlined focus style does not touch the elements
 *    left and right edges.
 **/

$ProductBackToTop-height: 32px; /* 1 */
$ProductBackToTop-border-radius: 1.75; /* 2 */

.ProductBackToTop {
  display: none;
  height: $ProductBackToTop-height;
  justify-content: center;
  margin-top: $ProductBackToTop-height;
}

@media (min-width: $breakpoint-md) {
  .ProductBackToTop {
    display: flex;
  }
}

.ProductBackToTop-middle {
  background: $color-silver;
  border-radius: ($ProductBackToTop-height / $ProductBackToTop-border-radius)
    ($ProductBackToTop-height / $ProductBackToTop-border-radius) 0 0;
  color: $color-blue;
  cursor: pointer;
  display: inline-block;
  height: $ProductBackToTop-height;
  line-height: $ProductBackToTop-height;
  padding: 0 $ProductBackToTop-height;
  user-select: none;
}

.ProductBackToTop-middle:hover {
  color: $color-darkgray;
}

.ProductBackToTop-middle:focus {
  outline: none;
}

.ProductBackToTop-middle:focus::after {
  bottom: $border-width-lg;
  border-bottom: $border-width-lg solid $color-darkgray;
  content: "";
  display: block;
  margin: 0 auto;
  position: relative;
  width: 96%; /* 3 */
}

.ProductBackToTop-left,
.ProductBackToTop-right {
  background: $color-silver;
  display: inline-block;
  height: $ProductBackToTop-height;
  width: $ProductBackToTop-height;

  &::before {
    content: "";
    background: $color-white;
    display: block;
    height: 100%;
    width: 100%;
  }
}

.ProductBackToTop-left::before {
  border-bottom-right-radius: (
    $ProductBackToTop-height / $ProductBackToTop-border-radius
  );
}

.ProductBackToTop-right::before {
  border-bottom-left-radius: (
    $ProductBackToTop-height / $ProductBackToTop-border-radius
  );
}

/**
 * Customer Fulfillment Options
 */

.de-ProductFulfillment {
  border-bottom: 0;
}

@media (min-width: $breakpoint-lg) {
  .de-ProductFulfillment {
    border-bottom: $border-width-lg solid $color-lime;
  }
}

.de-ProductFulfillment-option {
  padding: 0.35rem 0;
}

/**
 * Button
 *
 * There is a lack of consistency of button styles across decathlon.com and a
 * button pattern does not exist in the pattern library. At some point a button
 * pattern should be created.
 *
 * `de-Button` is being added to address some global concerns related to
 * different styles associated with states such as `disabled`. At some point
 * refactoring and introducing `de-Button` into the pattern library should
 * be considered.
 */

$button-background-hover: #429dd7;

.de-Button {
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  background-color: $color-blue;
  border: $border-width-md solid $color-blue;
  color: $color-white;
  user-select: none;
}

.de-Button:hover {
  background-color: $button-background-hover;
  border-color: $button-background-hover;
}

.de-Button[disabled] {
  background-color: $color-gray;
  border-color: $color-gray;
  color: $color-white;
  cursor: not-allowed;
}

/**
 * ProductQuantity
 *
 * 1. Adds `display: flex` for browsers (IE11) that don't support
 *    `display: grid'
 * 2. Adds `display: grid` for modern browsers
 * 3. `72px` is the desired visual width for the quantity input
 * 4. Allows the height of the input to match the button
 * 5. Enables button to fill remaining space for browsers (IE11) that don't
 *    support `display: grid`
 * 6. `16px` is the desired visual gap between the quantity input and the
 *    Add to Cart button. Also 2x the `SwatchObjects-item` gap
 */

@media (min-width: $breakpoint-md) {
  .de-AddToCartActions {
    display: flex; /* 1 */
  }

  @supports (display: grid) {
    .de-AddToCartActions {
      display: grid; /* 2 */
      grid-template-columns: 72px 1fr; /* 4 */
    }
  }
}

.de-ProductQuantity {
  flex: 0 1 72px; /* 3 */
}

.de-ProductQuantity-input {
  border: $border-width-md solid $color-gray;
  height: 100%; /* 4 */
}

@media (min-width: $breakpoint-md) {
  .de-ProductAddToCart {
    flex: 1 0 auto; /* 5 */
    margin-left: 16px; /* 6 */
  }
}

.ContentHeading {
  border-bottom: $border-width-md solid $color-silver;
  margin-bottom: 1rem;
}

.ContentHeading--blue {
  border-color: $color-blue;
}

/**
 * Additional Videos
 */

@media (min-width: $breakpoint-lg) {
  .de-AdditionalVideos {
    margin: 0 auto;
    max-width: 72vw;
  }
}

/**
 * Legacy style overrides
 */

/*
 * Override existing style property with a higher level of specificity.
 * A visual bug is present due to styles associated with styles attached to
 * `.template-product .addToCartForm::after` located in timber.scss.
 * We are overriding this style here with the `!important` tag as a last
 * resort effort to fix the issue without modifying the offending stylesheet
 * with our own prefixed class name.
 */

.template-product .de-addToCartForm::after {
  display: none;
}

/*
 * Legacy breadcrumb styles
 *
 * 1. The legacy breadcrumb styles inherit an undesirable margin-bottom
 *    property when in use on product pages. The following `1em` value sets
 *    the desired visual gap between the breadcrumb component and the buy box.
 */

.template-product .breadcrumb {
  margin-bottom: 1em;
}

.template-product .addToCart {
  float: none;
  margin-right: 0;
}


/*
 * ProductTitleLockup
 */

 .de-ProductTitleLockup {
  position: relative;
}

@media (min-width: $breakpoint-lg) {
  .de-ProductTitleLockup {
    border-bottom: $border-width-sm solid $color-silver;
  }
}

@media (min-width: $breakpoint-lg) {
  .de-ProductTitleLockup-rating {
    bottom: 15px;
    position: absolute;
    right: 0;
  }
}

.de-ProductTitleLockup-price {
  display: none;
}

@media (min-width: $breakpoint-lg) {
  .de-ProductTitleLockup-price {
    display: flex;
  }
}

/**
 * Product Buy Box
 * 1. 50vw is a magical number that allows the add to cart button to
 * appear "above the fold" with a high percentage of perdicatability
 */

@media (min-width: $breakpoint-lg) {
  .de-ProductBuyBox {
    flex: 1 0 50vw;
    padding-left: 2rem;
  }

  .ProductMoreInfo {
    border-bottom: $border-width-lg solid $color-lime;
  }
}

/**
 * 1. 43.333% is a magical number that allows the add to cart button to
 * appear "above the fold" with a high percentage of perdicatability
 */

@media (min-width: $breakpoint-xl) {
  .de-ProductBuyBox {
    flex: 1 0 43.333%; /* 1 */
  }
}

/* Accordion */

.de-Accordion-header {
  align-items: center;
  appearance: none;
  background-color: $color-white;
  border: 0;
  cursor: pointer;
  display: flex;
  font: inherit;
  font-family: avalon_mediumbold;
  justify-content: space-between;
  margin: 0;
  padding: 0.5rem 1rem;
  text-align: left;
  width: 100%;
}

@media (min-width: $breakpoint-md) {
  .de-Accordion-header {
    display: none;
  }
}

.de-Accordion-header:focus {
  outline: $border-width-md solid $color-blue;
  outline-offset: -3px;
}

.de-Accordion-content {
  padding: 0 1rem;
}

/*
 * 1. Conditionally show accordion content when in a drawer
 *    @see scripts/product-page/drawer.js
 */

.de-is-drawerOpen .de-Accordion:not(.de-is-open) .de-Accordion-content {
  display: block; /* 1 */
}

/*
 * 1. Display the title that is normally hidden at small viewport widths whenever
 *    the drawer is open. The drawer and accordion are coupled because the drawer
 *    may display the same content that is included as an accordion section. The
 *    dynamic class 'de-is-drawerOpen' is added to a parent, wrapper element.
 */

.de-is-drawerOpen .de-ProductInfoTitle {
  display: inline-block !important; /* 1 */
}

@media (min-width: $breakpoint-md) {
  .de-Accordion-content {
    padding: 0;
  }
}

.de-Accordion:not(.de-is-open) .de-Accordion-content {
  display: none;
}

@media (min-width: $breakpoint-md) {
  .de-Accordion-content {
    display: block !important;
  }
}

.de-Accordion-indicator {
  transform-origin: center;
  transition: 0.2s linear transform;
  font-size: calc(2msu * 1em);
}

.de-Accordion.de-is-open .de-Accordion-indicator {
  transform: rotate(-45deg);
}


.de-ReviewSummary {
  border-bottom: $border-width-sm solid $color-silver;
}

/**
 * @pattern StarRating
 * Consider converting this into a pattern in the future.
 */

 .de-StarRating,
 .de-StarRating-fill {
   background-position: left;
   background-repeat: no-repeat;
   background-size: auto 100%;
 }

 .de-StarRating {
   background-image: url("stars.svg");
   height: 1.2em;
   position: relative;
   width: 6em;
   margin: 0;
 }

 .de-StarRating-fill {
   background-image: url("stars-fill.svg");
   height: 100%;
   left: 0;
   position: absolute;
   top: 0;
   width: 100%;
 }

/**
 * ReviewMatrix
 * @TODO
 * 1. Consider refactoring/revising if `ReviewMatrix` has no styling
 */

.de-ReviewMatrix-stars {
  flex: 0 1 auto;
}

/**
 * @TODO:
 * 1. Remove reliance on fixed pixel value
 */

.de-ReviewMatrix-graph {
  display: block;
  height: 25px; /* 1 */
  width: 100%;
}

/**
 * @pattern ReviewMatrix
 * Consider converting this into a pattern in the future.
 */

.de-CustomerReview {
  border-bottom: $border-width-sm solid $color-silver;
}

.de-CustomerReview:last-of-type {
  border-bottom: 0;
}

/**
 * 1. The second step in the Decathlon pattern library modular scale
 */

.de-CustomerReview-response {
  padding-left: 1.424rem; /* 1 */
  border-left: $border-width-lg solid $color-lime;
}

.de-CustomerReview-title {
  display: flex;
  flex-direction: column;
  align-items: baseline;
}

.de-is-inPageFlow .de-CustomerReview-title {
  @media (min-width: $breakpoint-lg) {
    flex-direction: row;
  }
}

.de-is-inPageFlow .de-ReviewsContainer-reviewSummary {
  @media (min-width: $breakpoint-md) {
    flex-basis: auto;
    width: 50%;
  }
  @media (min-width: $breakpoint-lg) {
    width: 33.33333%;
    padding-right: 1rem;
  }
}

/**
 * 1. `2.0227` is the sixth step in the modular scale in use by the pattern library.
 */

.de-ReviewsContainer-reviews {
  padding-top: 2.027rem; /* 1 */
}

/**
 * 1. `2.0227` is the sixth step in the modular scale in use by the pattern library.
 */

.de-is-inPageFlow .de-ReviewsContainer-reviews {
  @media (min-width: $breakpoint-md) {
    flex-basis: auto;
    width: 50%;
    padding-top: 0;
    padding-left: 2.027rem; /* 1 */
  }
  @media (min-width: $breakpoint-lg) {
    width: 66.66667%;
  }
}

.de-ReviewsContainer-featuredImage {
  display: none;
}

.de-is-inPageFlow .de-ReviewsContainer-featuredImage {
  @media (min-width: $breakpoint-md) {
    display: block;
  }
}

.de-is-inPageFlow .de-ReviewMatrix-reviewBtn {
  display: block;
}
.de-is-drawerOpen .de-ReviewMatrix-reviewBtn {
  display: none;
}

/**
 * @TODO
 * 1. since this is related to videos, there is probably a better name for
 *    `de-ProductPhoto`. Perhaps `de-ProductVideoPoster`.
 */

 .de-ProductPhoto {
  position: relative;
  overflow: hidden;
}

.de-watch-video-button {
  cursor: pointer;
  svg {
    vertical-align: middle;
  }
}

/**
 * @TODO
 * 1. since this is related to videos, there is probably a better name for
 *    `de-thumb`. Perhaps `de-ProductVideoThumb`.
 */

.de-thumb {
  padding: 10px;
}

.de-slick--videos-thumbnails {
  margin-left: -10px;
}

@media (max-width: $breakpoint-md) {
  .de-slick--videos {
    margin: auto;
  }
  .de-slick--videos-thumbnails {
    display: none;
  }
  .de-thumb {
    padding: 40px 80px;
  }
}

/*
 * @pattern Slide-in Drawer
 * Consider converting this into a pattern in the future.
 *
 * A slide-in overlay pattern, suitable for displaying additional content,
 * equipped with `overflow-y` scrolling.
 *
 * Placing content inside of this pattern is often not the most appropriate
 * choice for displaying content and can lead to poor user experiences when used
 * improperly. Consider usage of this pattern wisely.
 *
 * 1. Ensures element is not overlapped by `Drawer-header`
 * 2. Fixed positioning is required for both the `transform` and `overflow-y`
 * scrolling to work properly.
 * 3. Places the component off-canvas an equal distance to the available
 * viewport width. Necessary for the "slide-in/slide-out" effect
 *
 * @TODO:
 * 1. Complete: ~small screen 100vw via `transform: translateX(0);`~
 * 2. Pending: large screen partial vw via transform
 *
 */

/**
 * Drawer variables
 *
 * 1. Width matches the width of the Buy Box - which is the desired width of
 *    of the active drawer - no more, no less.
 */

$drawer-max-width: 43.333%; /* 1 */

/**
 * Base Drawer overlay styles
 */

.de-Drawer-overlay {
  background-color: rgba(172, 179, 184, 0.5);
  opacity: 0;
  position: absolute;
  transition: opacity $transition-speed-normal $transition-easing-smooth;
}

/**
 * Styles for the overlay behind the Drawer when it is open
 *
 * 1. This value is one below the .de-Drawer z-index to make sure the overlay
 *    falls beneath the Drawer content
 */

.de-Drawer.de-is-active .de-Drawer-overlay {
  height: 100%;
  left: 0;
  opacity: 1;
  top: 0;
  width: 100%;
  z-index: 1999; /* 1 */
}

/**
 * Apply these properties to drawer content that isn't currently being
 * displayed in regular page flow
 */

.de-Drawer:not(.de-is-inPageFlow) .de-Drawer-contentWrapper {
  background-color: $color-white;
  height: 100%;
  max-width: 90%;
  right: 0;
  padding-top: $header-height-sm; /* 1 */
  position: fixed; /* 2 */
  top: 0;
  transform: translateX(100vw); /* 3 */
  transition: transform $transition-speed-normal $transition-easing-smooth;
  width: 100vw;
  z-index: 2000;
}


@media (min-width: $breakpoint-md) {
  .de-Drawer:not(.de-is-inPageFlow) .de-Drawer-contentWrapper {
    max-width: 70%;
  }
}

@media (min-width: $breakpoint-lg) {
  .de-Drawer:not(.de-is-inPageFlow) .de-Drawer-contentWrapper {
    max-width: $drawer-max-width;
  }
}

/**
 * Drawer modifier, changes the transition from default RTL to custom LTR
 */

.de-Drawer--transitionLeftToRight:not(.de-is-inPageFlow)
  .de-Drawer-contentWrapper {
  left: 0;
  transform: translateX(-100vw);
}

/**
 * Disable timed transitions for drawers that will show
 * content also shown in regular page flow.
 * The extra class applied to these drawers will be managed at the appropriate
 * time by JavaScript
 *
 * Allows the "displays_in_page_flow" content option to transition smoothly when opening
 * and closing, same as the standard drawer (whose position is never switched to
 * "static")
 */

.de-Drawer--contentFromPageFlow.de-is-closed .de-Drawer-contentWrapper,
.de-Drawer--contentFromPageFlow.de-is-opening .de-Drawer-contentWrapper {
  transition: transform 0s;
}

/**
 * Re-enable default transition duration for the "displays_in_page_flow" drawer
 * option, when also in active (open) state
*/

.de-Drawer--contentFromPageFlow.de-is-open .de-Drawer-contentWrapper {
  transition: transform $transition-speed-normal;
}

/*
 * 1. When "active", slide the component into the viewport
 */

.de-Drawer.de-is-active .de-Drawer-contentWrapper {
  transform: translateX(0); /* 1 */
}

/*
 * Switch to static positioning for keeping drawer content in page flow, when
 * using the is-in-page-flow option
 */

.de-Drawer.de-is-inPageFlow .de-Drawer-contentWrapper {
  position: static;
}

.de-Drawer-header {
  border-bottom: $border-width-sm solid $color-light-gray;
  display: flex;
  height: $header-height-sm;
  left: 0;
  letter-spacing: 0.5px;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 3000;
}

@media (min-width: $breakpoint-md) {
  .de-Drawer-header {
    height: $header-height-md;
  }
}

/*
 * Hide the header for content that is being displayed in page flow
 */

.de-Drawer.de-is-inPageFlow .de-Drawer-header {
  display: none;
}

/*
 * 1. Enables momentum-based scrolling, where the content continues to scroll
 *    for a while after finishing the scroll gesture and removing your finger from
 *    the touchscreen. The speed and duration of the continued scrolling is
 *    proportional to how vigorous the scroll gesture was. Also creates a new
 *    stacking context. Support: Safari iOS.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling
 *
 * 2. Matches the padding added when using the utility class '.de-u-pad'
 *
 * Applies only to drawer content displayed in an open drawer, not when displayed
 * in regular page flow
 */

.de-Drawer:not(.de-is-inPageFlow) .de-Drawer-content {
  height: 100%;
  overflow-y: scroll;
  padding: 1rem; /* 2 */
  -webkit-overflow-scrolling: touch; /* 1 */
}

/*
 * 1. Ensures the last direct descendant of `Drawer-content` receives spacing at
 *    the bottom of the scrollable content equal to the height of `Drawer-header`
 *
 * @TODO - Consider any future ways to reduce specificity here
 */

.de-Drawer:not(.de-is-inPageFlow) .de-Drawer-content > *:last-child {
  margin-bottom: 0; /* 1 */
  padding-bottom: $header-height-sm; /* 1 */
}

/*
 * States
 */

/*
 * 1. Prevents unwanted scrolling of content covered by `Drawer`
 */

.de-content-is-fixed {
  overflow: hidden; /* 1 */
  position: fixed; /* 1 */
}
