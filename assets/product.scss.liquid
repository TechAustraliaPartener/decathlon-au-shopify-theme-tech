/**
 * @TODO
 * The final Product Page CSS will be copied/pasted into this file
 *
 * Any shared CSS styles can be added to this file from the beginning.
 */

/**
 * Color Palette
 *
 * Variable names are based on similar CSS extended color keyword values.
 *
 * @see https://www.w3.org/TR/2018/REC-css-color-3-20180619/#svg-color
 */

$color-black: #2a2b2c;
$color-blue: #0082c3;
$color-darkgray: #464646;
$color-gray: #acb3b8;
$color-gray50: rgba(172, 179, 184, 0.5);
$color-lime: #cbfb00;
$color-silver: #f3f3f3;
$color-white: #fff;
$color-red: #e53322;

/**
 * Border Width
 */

$border-width-sm: 1px;
$border-width-md: 2px;
$border-width-lg: 3px;
$border-width-xl: 6px;

/**
 * Media Queries
 */

$breakpoint-sm: 30em;
$breakpoint-md: 40em;
$breakpoint-lg: 60em;
$breakpoint-xl: 80em;

figure {
  margin: 0;
}

/**
 * Product Page Wrapper
 */

.de-Wrapper {
  padding-left: 1rem;
  padding-right: 1rem;
}

/**
 * Full width Wrapper modifier
 *
 * Full width container inside a limited width parents. No calc() needed.
 * @see https://css-tricks.com/full-width-containers-limited-width-parents/#article-header-id-6
 */

@media (max-width: $breakpoint-lg) {
  .de-Wrapper--fullwidth {
    width: 100vw;
    position: relative;
    left: 50%;
    right: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
  }
}

/*
 * ProductFlag
 */

.de-ProductFlag {
  line-height: 1.2;
  text-transform: uppercase;
  padding: 0.38125em 0.75375em;
  z-index: 1;
  position: absolute;
  top: 0;
  right: 0;
}

/**
 * ProductMenu
 *
 * 1. The height in pixels of the fixed position, `de-PageWrap-header` element,
 *    which is the element that this component must "stick" beneath.
 * 2. Setting the `z-index` value to `1999` ensures the product menu will display
 *    below the 'Drawer' overlay which has a z-index of `2000`, while at the
 *    same time making it more difficult for other elements to appear on top of
 *    the sticky `ProductMenu` component.
 * 3. This component is not intended to be displayed for small screens. Setting
 *    display none here because of known "issue" with `de-u-hidden` not working
 *    well with responsive display flex utiltities.
 *
 * Note: position sticky is not supported in IE11. This component will degrade
 * gracefully and the non-sticky experience has been deemed acceptable for
 * this component.
 */

.de-ProductMenu {
  background-color: $color-white;
  border-top: $border-width-sm solid $color-gray50;
  border-bottom: $border-width-sm solid $color-gray50;
  display: none; /* 3 */
  justify-content: center;
  position: sticky;
  top: 58px; /* 1 */
  z-index: 1999; /* 2 */
}

@media (min-width: $breakpoint-md) {
  .de-ProductMenu {
    display: flex;
  }
}

/**
 * 1. Using viewport width units provides an ideal flexibile padding between
 *    menu items and padding is incremented as the browser width changes. The
 *    numerical value is one of pure aestheic preference and may need to be
 *    adjusted in the future.
 */

.de-ProductMenu .de-MenuBar-action {
  padding-left: 4vw; /* 1 */
  padding-right: 4vw; /* 1 */
}

/**
 * A unique solution for anchor links for use when fixed or sticky menus are
 * present. Adding this class to an element directly preceding the element, or
 * as the first-child inside of the element you'd like to link to, will ensure
 * the context does not become hidden behind the fixed/sticky header element.
 *
 * The method of assigning a negative integar for margin, and the same
 * (non-negative) integar for padding ensures that a gap in the content does
 * not exist.
 *
 * @see: https://css-tricks.com/hash-tag-links-padding
 *
 * 1. The value `180px` was determined by adding the height of both the primary
 *    navigation and the product page sticky menu plus "a little extra" for a
 *    more comfortable anchor navigation experience - making it a bit of a
 *    magic number
 *
 */
.de-ProductAnchor {
  display: block;
  margin-top: -180px;
  padding-top: 180px;
}

/**
 * ProductInfoSection
 */

.de-ProductInfoSection {
  border-top: $border-width-xl solid $color-silver;
}

.de-ProductInfoSection:last-of-type {
  border-bottom: $border-width-xl solid $color-silver;
}

@media (min-width: $breakpoint-md) {
  .de-ProductInfoSection {
    border: 0;
  }
}

.de-ProductInfoSection--silver {
  background-color: $color-white;
}

@media (min-width: $breakpoint-md) {
  .de-ProductInfoSection--silver {
    background-color: $color-silver;
  }
}

.de-ProductInfoTitle {
  border-bottom: $border-width-lg solid $color-lime;
  padding-bottom: 5px;
  margin: 0;
}

/**
 * Sub brand logos
 *
 * 1. Warning: Magic numbers at work.
 *
 * @TODO
 * Consider moving width and height values to SVG
 */

.de-LogoSportsBrand {
  height: 100%;
  height: 24px; //* 1 *//
}

.de-DecathlonChatBubble {
  width: 124px;
}

.ProductFeature-icon {
  filter: grayscale(1);
  flex: 1 0 auto;
  max-width: 60px;
  width: 50px;
}

/**
 * Utilities
 *
 * @TODO
 * 1. Update patterns library with this class
 */

.de-u-textRed {
  //* 1 *//
  color: $color-red !important;
}

.de-u-textSelectNone {
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
  -webkit-user-select: none !important;
}

.de-u-fullwidth {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}

/**
 * ProductInformation
 */

.ProductInformation {
  columns: 370px 3;
  column-gap: 36px;
}

.ProductInformation-entry {
  break-inside: avoid;
  margin-bottom: 2rem;
}

@media (min-width: $breakpoint-md) {
  .ProductInformation-entry:not(:first-of-type) {
    margin-top: 3rem;
  }
}

/**
 * Size Guide
 */

.SizeGuide-table {
  overflow-x: scroll;
}

.SizeGuide-table::before {
  content: "";
  padding-right: 1rem;
  width: 0;
}

.SizeGuide-table::after {
  content: "";
  padding-left: 1rem;
  width: 0;
}

/**
 * Hacks
 *
 * 1. Removes floating green email me button
 */

.bis-reset,
.bis-button,
.bis-button.BIS_trigger {
  //* 1 * //
  display: none !important;
  opacity: 0;
}

/**
 * ProductBackToTop
 *
 * 1. The desired visual height for the element. Visually dependant on this
 *    component's border-radius value.
 * 2. The desired border-radius value for the component. Visually dependant on
 *    this component's height value. Border-radius does not accept unitless
 *    values however this value is being used in calc() function, so the
 *    unitless value is required.
 * 3. Ensures the underlined focus style does not touch the elements
 *    left and right edges.
 **/

$ProductBackToTop-height: 32px; /* 1 */
$ProductBackToTop-border-radius: 1.75; /* 2 */

.ProductBackToTop {
  display: none;
  height: $ProductBackToTop-height;
  justify-content: center;
  margin-top: $ProductBackToTop-height;
}

@media (min-width: $breakpoint-md) {
  .ProductBackToTop {
    display: flex;
  }
}

.ProductBackToTop-middle {
  background: $color-silver;
  border-radius: ($ProductBackToTop-height / $ProductBackToTop-border-radius)
    ($ProductBackToTop-height / $ProductBackToTop-border-radius) 0 0;
  color: $color-blue;
  cursor: pointer;
  display: inline-block;
  height: $ProductBackToTop-height;
  line-height: $ProductBackToTop-height;
  padding: 0 $ProductBackToTop-height;
  user-select: none;
}

.ProductBackToTop-middle:hover {
  color: $color-darkgray;
}

.ProductBackToTop-middle:focus {
  outline: none;
}

.ProductBackToTop-middle:focus::after {
  bottom: $border-width-lg;
  border-bottom: $border-width-lg solid $color-darkgray;
  content: "";
  display: block;
  margin: 0 auto;
  position: relative;
  width: 96%; /* 3 */
}

.ProductBackToTop-left,
.ProductBackToTop-right {
  background: $color-silver;
  display: inline-block;
  height: $ProductBackToTop-height;
  width: $ProductBackToTop-height;

  &::before {
    content: "";
    background: $color-white;
    display: block;
    height: 100%;
    width: 100%;
  }
}

.ProductBackToTop-left::before {
  border-bottom-right-radius: (
    $ProductBackToTop-height / $ProductBackToTop-border-radius
  );
}

.ProductBackToTop-right::before {
  border-bottom-left-radius: (
    $ProductBackToTop-height / $ProductBackToTop-border-radius
  );
}

/**
 * Customer Fulfillment Options
 */

.de-ProductFulfillment {
  border-bottom: 0;
}

@media (min-width: $breakpoint-lg) {
  .de-ProductFulfillment {
    border-bottom: $border-width-lg solid $color-lime;
  }
}

/**
 * Button
 *
 * There is a lack of consistency of button styles across decathlon.com and a
 * button pattern does not exist in the pattern library. At some point a button
 * pattern should be created.
 *
 * `de-Button` is being added to address some global concerns related to
 * different styles associated with states such as `disabled`. At some point
 * refactoring and introducing `de-Button` into the pattern library should
 * be considered.
 */

$button-background-hover: #429dd7;

.de-Button {
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  background-color: $color-blue;
  border: $border-width-md solid $color-blue;
  color: $color-white;
  user-select: none;
}

.de-Button:hover {
  background-color: $button-background-hover;
  border-color: $button-background-hover;
}

.de-Button[disabled] {
  background-color: $color-gray;
  border-color: $color-gray;
  color: $color-white;
  cursor: not-allowed;
}

/**
 * ProductQuantity
 *
 * 1. Adds `display: flex` for browsers (IE11) that don't support
 *    `display: grid'
 * 2. Adds `display: grid` for modern browsers
 * 3. `72px` is the desired visual width for the quantity input
 * 4. Allows the height of the input to match the button
 * 5. Enables button to fill remaining space for browsers (IE11) that don't
 *    support `display: grid`
 * 6. `16px` is the desired visual gap between the quantity input and the
 *    Add to Cart button. Also 2x the `SwatchObjects-item` gap
 */

@media (min-width: $breakpoint-md) {
  .de-AddToCartActions {
    display: flex; /* 1 */
  }

  @supports (display: grid) {
    .de-AddToCartActions {
      display: grid; /* 2 */
      grid-template-columns: 72px 1fr; /* 4 */
    }
  }
}

.de-ProductQuantity {
  flex: 0 1 72px; /* 3 */
}

.de-ProductQuantity-input {
  border: $border-width-md solid $color-gray;
  height: 100%; /* 4 */
}

.de-ProductAddToCart {
  width: 100%;
}

@media (min-width: $breakpoint-md) {
  .de-ProductAddToCart {
    flex: 1 0 auto; /* 5 */
    margin-left: 16px; /* 6 */
  }
}

/*
 * Override exisiting style property with a higher level of specificity.
 * A visual bug is present due to styles associated with styles attached to
 * `.template-product .addToCartForm::after` located in timber.scss.
 * We are overriding this style here with the `!important` tag as a last
 * resort effort to fix the issue without modifying the offending stylesheet
 * with our own prefixed class name.
 */

.de-addToCartForm::after {
  display: none !important;
}
