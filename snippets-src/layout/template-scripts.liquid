{% case template %}
  {% when 'index' %}
    <script defer type="module" src="{{ 'built-home.js' | asset_url }}"></script>
    <script type="module" src="{{ 'built-product-tile.js' | asset_url }}"></script>
    <script type="module" src="{{ 'built-product-carousel.js' | asset_url }}"></script>
  {% when 'product' %}

    {% assign inventory = product.metafields.tomit_inventory %}
    {% if inventory.inventory_json.size > 0 %}
        <script>document.addEventListener('tomitLoaded', function(e) {tomitProductInventoryInfo.productJson = '{{inventory.inventory_json | json}}';});</script>
    {% endif %}
    <div id="inventoryLocationInformation"><span class="inventoryLocationLoading"></span></div>

    {% if product.metafields.global.features == blank %}
    {% else %}
      {% comment %} Modern Product Page {% endcomment %}
      {% comment %}
        Store Pickup Script(s)
        @TODO Install as npm packages. With the current rollup configuration,
        'moment-timezone.js' throws an error, requiring the use of 'rollup-plugin-json'.
        @see https://github.com/decathlon-usa/shopify-theme-decathlonusa/pull/441#discussion_r290511357
      {% endcomment %}
      {% include 'moment.js' %}
      {% include 'moment-timezone.js' %}

      

      <script>
        window.firstVariant = {{ product.selected_or_first_available_variant | json }};
        {% comment %} Oversell threshold {% endcomment %}
        {% if product.metafields.my_fields.oversell_threshold %}
          window.productOversellThreshold = {{ product.metafields.my_fields.oversell_threshold }};
        {% else %}
          window.productOversellThreshold = {{ settings.global_oversell_threshold }};
        {% endif %}
        {% comment %} 
          Create a new JS variant array with `inventory_policy` and `inventory_quantity` field
          as for some reason Shopify doesn't populate the invetory fields automatically with JSON filter
          See post: https://community.shopify.com/c/shopify-apis-and-sdks/why-would-product-variants-be-missing-the-inventory-policy-field/td-p/1153789

          Also it seems that this object `window.tomitProductInventoryInfo.activeProduct.variants` 
          `inventoryItem.available` field always returns 0 even though the quantity is below 0
        {% endcomment %}
        window.variantsWithInventoryData = [];
        {% for variant in product.variants %}
          var variant = {{ variant | json }};
          variant.inventory_policy = {{ variant.inventory_policy | json }};
          variant.inventory_quantity = {{ variant.inventory_quantity | json }};
          window.variantsWithInventoryData.push(variant);
        {% endfor %}
      </script>
      <script defer type="module" src="{{ 'built-product-page.js' | asset_url }}"></script>
    {% endif %}
    <script type="module" src="{{ 'built-product-carousel.js' | asset_url }}"></script>
    <script type="module" src="{{ 'built-product-tile.js' | asset_url }}"></script>
  {% when 'product.marketplace' %}
    {% include 'moment.js' %}
    {% include 'moment-timezone.js' %}
    <script>
      window.firstVariant = {{ product.selected_or_first_available_variant | json }};
      {% comment %} Oversell threshold {% endcomment %}
      {% if product.metafields.my_fields.oversell_threshold %}
        window.productOversellThreshold = {{ product.metafields.my_fields.oversell_threshold }};
      {% else %}
        window.productOversellThreshold = {{ settings.global_oversell_threshold }};
      {% endif %}
      {% comment %} 
        Create a new JS variant array with `inventory_policy` and `inventory_quantity` field
        as for some reason Shopify doesn't populate the invetory fields automatically with JSON filter
        See post: https://community.shopify.com/c/shopify-apis-and-sdks/why-would-product-variants-be-missing-the-inventory-policy-field/td-p/1153789

        Also it seems that this object `window.tomitProductInventoryInfo.activeProduct.variants` 
        `inventoryItem.available` field always returns 0 even though the quantity is below 0
      {% endcomment %}
      window.variantsWithInventoryData = [];
      {% for variant in product.variants %}
        var variant = {{ variant | json }};
        variant.inventory_policy = {{ variant.inventory_policy | json }};
        variant.inventory_quantity = {{ variant.inventory_quantity | json }};
        window.variantsWithInventoryData.push(variant);
      {% endfor %}
    </script>
    <script defer type="module" src="{{ 'built-product-page.js' | asset_url }}"></script>
    <script type="module" src="{{ 'built-product-carousel.js' | asset_url }}"></script>
    <script type="module" src="{{ 'built-product-tile.js' | asset_url }}"></script>
  
  {% when 'product.marketplace-duplicate' %}
    {% include 'moment.js' %}
    {% include 'moment-timezone.js' %}
    <script>
      window.firstVariant = {{ product.selected_or_first_available_variant | json }};
      {% comment %} Oversell threshold {% endcomment %}
      {% if product.metafields.my_fields.oversell_threshold %}
        window.productOversellThreshold = {{ product.metafields.my_fields.oversell_threshold }};
      {% else %}
        window.productOversellThreshold = {{ settings.global_oversell_threshold }};
      {% endif %}
      {% comment %} 
        Create a new JS variant array with `inventory_policy` and `inventory_quantity` field
        as for some reason Shopify doesn't populate the invetory fields automatically with JSON filter
        See post: https://community.shopify.com/c/shopify-apis-and-sdks/why-would-product-variants-be-missing-the-inventory-policy-field/td-p/1153789

        Also it seems that this object `window.tomitProductInventoryInfo.activeProduct.variants` 
        `inventoryItem.available` field always returns 0 even though the quantity is below 0
      {% endcomment %}
      window.variantsWithInventoryData = [];
      {% for variant in product.variants %}
        var variant = {{ variant | json }};
        variant.inventory_policy = {{ variant.inventory_policy | json }};
        variant.inventory_quantity = {{ variant.inventory_quantity | json }};
        window.variantsWithInventoryData.push(variant);
      {% endfor %}
    </script>
    <script defer type="module" src="{{ 'built-product-page.js' | asset_url }}"></script>
    <script type="module" src="{{ 'built-product-carousel.js' | asset_url }}"></script>
    <script type="module" src="{{ 'built-product-tile.js' | asset_url }}"></script>
  {% when 'customers/account' %}
    {% if settings.extra_details == 'customer_fields' %}
      <script defer type="module" src="{{ 'built-customer-fields.js' | asset_url }}"></script>
    {% endif %}
  {% when 'cart' %}
    <script defer type="module" src="{{ 'built-cart-page.js' | asset_url }}"></script>
    <script defer nomodule src="{{ 'built-cart-page.js' | asset_url }}"></script>
    <script type="module" src="{{ 'built-product-tile.js' | asset_url }}"></script>
    <script type="module" src="{{ 'built-product-carousel.js' | asset_url }}"></script>
    <script>
      {% comment %} 
        line items with variant `inventory_policy`, `inventory_quantity`, 
        and product-level oversell threshold
      {% endcomment %}
      window.itemsWithVariantInventoryData = [];
      window.cartItems = {{ cart.items | json }};
      {% for line_item in cart.items %}
        var lineItem = {{ line_item | json }};
        var variant = {{ line_item.variant | json }};
        variant.inventory_policy = {{ line_item.variant.inventory_policy | json }};
        variant.inventory_quantity = {{ line_item.variant.inventory_quantity | json }};
        lineItem.variant = variant;
        
        {% comment %} Product oversell threshold {% endcomment %}
        {% if line_item.product.metafields.my_fields.oversell_threshold %}
          lineItem.productOversellThreshold = {{ line_item.product.metafields.my_fields.oversell_threshold }};
        {% else %}
          lineItem.productOversellThreshold = {{ settings.global_oversell_threshold }};
        {% endif %}

        window.itemsWithVariantInventoryData.push(lineItem);
      {% endfor %}
    </script>
  {% when 'collection' %}
    <script defer src="{{ 'built-collection-page.js' | asset_url }}"></script>
    {% if settings.show_recently_viewed_carousel_on_collection_page %}
      <script type="module" src="{{ 'built-product-carousel.js' | asset_url }}"></script>
      <script type="module" src="{{ 'built-product-tile.js' | asset_url }}"></script>
      <script type="module" src="{{ 'built-init-recently-viewed.js' | asset_url }}"></script>
    {% endif %}
  {% when 'search' %}
    {% if settings.show_recently_viewed_carousel_on_search_page %}
      <script type="module" src="{{ 'built-product-carousel.js' | asset_url }}"></script>
      <script type="module" src="{{ 'built-product-tile.js' | asset_url }}"></script>
      <script type="module" src="{{ 'built-init-recently-viewed.js' | asset_url }}"></script>
    {% endif %}
{% endcase %}

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.1/moment-with-locales.min.js" integrity="sha256-ZykW30UBCXWkPGsVyVPdJlUrce9/PawgYCEzinA4pnU=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.17/moment-timezone-with-data-2012-2022.min.js" integrity="sha256-pQNlWZakdoYCCoBWZ5G8hXPqONH7l7QX+MGFoAkiBqs=" crossorigin="anonymous"></script>
{%- comment -%}
<script defer type="module" src="{{ 'moment.js' | asset_url }}"></script>
<script defer type="module" src="{{ 'moment-timezone.js.liquid' | asset_url }}"></script>
{%- endcomment -%}

<script defer type="module" src="{{ 'built-global.js' | asset_url }}"></script>

