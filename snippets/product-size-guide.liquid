{% comment %}
  A note about non `de-` classes. These classes have styles associated with them
  in `timber.css` and `legacy.css` with high levels of specificity. These
  classes are not receiving any properties from these style rules when used
  here. instead, they are actually receiving inlined styles based on logic
  defined in decathlon.js ðŸ˜•

  @see
  â†’ `esc-size-guide--table`
  â†’ `esc-size-guide--heading`
  â†’ `esc-size-guide--cell`

{% endcomment %}


{%- for tag in product.tags -%}
  {%- if tag contains 'Size Chart: ' -%}
    {%- assign size_guide_tag = tag | split: 'Size Chart: ' -%}
    {%- assign size_guide = size_guide_tag[1] -%}
  {%- endif -%}
{%- endfor -%}


<div class="de-u-flex de-u-flexJustifyCenter">
  <img class="sizechart-visual" src="{{ size_guide | handleize | prepend: 'sizechart-' | append: '.jpg' | file_img_url: '300x' }}" alt="Size Guide Visual">
</div>

<div class="SizeGuide">
  <div class="SizeGuide-table de-Wrapper--fullwidth de-u-flex de-u-padBottom3">
    {% comment %}
      A note about the `data` attributes, they are required by the Size Matters app.

      @see
      â†’  https://testing-decathlon-usa.myshopify.com/admin/apps/sizeguide/app
    {% endcomment %}
    <div data-app="eastsideco_sizeGuides"
      data-shop="{{ shop.permanent_domain }}"
      data-tags="{{ product.tags | join:',' | escape }}"
      data-metafields="{{ product.metafields.esc-size-matters.tag }}"
      data-popup="">
    </div>
  </div>
</div>
