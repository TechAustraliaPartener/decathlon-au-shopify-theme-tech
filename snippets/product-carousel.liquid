{% comment %}
  Variables
{% endcomment %}
{%- assign current_variant = product.selected_or_first_available_variant -%}
{%- assign featured_image = current_variant.image | default: product.featured_image -%}
{% comment %}
  @TODO - Can be made available more globally by moving to `templates/product.liquid`
{% endcomment %}
{%- assign product_images = product.images -%}
{%- assign option_type = 'color' -%}
{%- assign option_type_position = null -%}
{% comment %}
  @TODO - Can be made available more globally by moving to `templates/product.liquid`
{% endcomment %}
{%- assign context_photo_delimiter = '[[contextphoto]]' -%}

{% comment %}
  Store all color option values, and set color option index
{% endcomment %}
{%- capture all_colors -%}
  {%- for product_option in product.options_with_values -%}
    {%- assign product_option_name = product_option.name | downcase -%}
    {%- if product_option_name == option_type -%}
      {%- assign option_type_position = product_option.position -%}
      {%- for value in product_option.values -%}
        {{- value | downcase -}}
        {%- unless forloop.last -%},{%- endunless -%}
      {%- endfor -%}
    {%- endif -%}
  {%- endfor -%}
{%- endcapture -%}

{%- assign all_colors_array = all_colors | split: ',' -%}

{% comment %}
  Store all unique color images of variants
{% endcomment %}
{%- capture all_colors_images -%}
  {%- for color in all_colors_array -%}
    {%- for variant in product.variants -%}
      {%- assign variant_option_type = 'option' | append: option_type_position -%}
      {%- assign variant_option = variant[variant_option_type] | downcase -%}
      {%- if variant_option == color -%}
        {{- variant.image -}}
        {%- unless forloop.last -%},{%- endunless -%}
        {%- break -%}
      {%- endif -%}
    {%- endfor -%}
  {%- endfor -%}
{%- endcapture -%}

{%- assign all_colors_images_array = all_colors_images | split: ',' -%}

{% comment %}
  Define the start and end of each color's images
{% endcomment %}
{%- capture all_colors_images_indexes -%}
  {%- for color_image in all_colors_images_array -%}
    {%- assign start_index = null -%}
    {%- assign end_index = null -%}
    {%- for product_image in product_images -%}
      {%- if product_image == color_image -%}
        {%- assign start_index = forloop.index0 -%}
      {%- elsif start_index != null and end_index == null -%}
        {%- assign product_image_index = forloop.index0 -%}
        {%- for color_image_inner in all_colors_images_array -%}
          {%- if product_image == color_image_inner and color_image != color_image_inner -%}
            {%- assign end_index = product_image_index -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endif -%}
      {%- if forloop.last -%}
        {%- if end_index == null -%}
          {%- assign end_index = forloop.index -%}
        {%- endif -%}
        {{- start_index -}},{{- end_index -}}||
      {%- endif -%}
    {%- endfor -%}
  {%- endfor -%}
{%- endcapture -%}

{%- assign all_colors_images_indexes_array = all_colors_images_indexes | split: '||' -%}

{% comment %}
  Define active variant's color value
{% endcomment %}
{%- capture activeColor -%}
  {%- assign variant_option_type = 'option' | append: option_type_position -%}
  {%- assign variant_option = current_variant[variant_option_type] | downcase -%}
  {{- variant_option -}}
{%- endcapture -%}

{%- for images_indexes in all_colors_images_indexes_array -%}
  {%- assign start_end_index_array = images_indexes | split: ',' -%}
  {%- assign start_index = start_end_index_array[0] | plus: 0 -%}
  {%- assign end_index = start_end_index_array[1] | plus: 0 -%}
  {%- assign color = all_colors_array[forloop.index0] -%}

  {% comment %}
    Product images, grouped by color
  {% endcomment %}
  <section
    data-color="{{- color -}}"
    class="de-CarouselContainer
    {% if color == activeColor %}de-is-active{% endif %}
    js-de-SlickCarouselContainer"
    aria-roledescription="carousel"
    aria-label="Product Image Gallery">
    {% comment %}
      Featured image
    {% endcomment %}
    <div class="de-CarouselFeature
         {% if color == activeColor %}de-is-active{% endif %}
         js-de-SlickCarousel js-de-SlickCarouselFeature"
         id="de-CarouselFeature">
      {%- for product_image in product_images -%}
        {% assign image_src = product_image | img_url: "318x", format: "pjpg" %}
        {% assign alt = product_image.alt %}
        {% capture image_srcset %}
          {{ product_image | img_url: "318x", format: "pjpg" }} 318w,
          {{ product_image | img_url: "422x", format: "pjpg" }} 422w,
          {{ product_image | img_url: "510x", format: "pjpg" }} 510w,
          {{ product_image | img_url: "595x", format: "pjpg" }} 595w,
          {{ product_image | img_url: "670x", format: "pjpg" }} 670w,
          {{ product_image | img_url: "740x", format: "pjpg" }} 740w,
          {{ product_image | img_url: "812x", format: "pjpg" }} 812w,
          {{ product_image | img_url: "882x", format: "pjpg" }} 882w,
          {{ product_image | img_url: "942x", format: "pjpg" }} 942w,
          {{ product_image | img_url: "960x", format: "pjpg" }} 960w
        {% endcapture %}
        {% capture image_sizes %}
          (max-width: 60em) 100vw,
          42vw
        {% endcapture %}
        {%- if forloop.index0 >= start_index and forloop.index0 < end_index -%}
          {%- unless product_image.alt contains context_photo_delimiter %}
            <div class="de-CarouselFeature-slide"
              aria-roledescription="slide"
              role="group"
              aria-label="{{ forloop.index | minus: start_index }} of {{ end_index | minus: start_index }}">
              <button class="de-CarouselFeature-btn">
                <img
                  class="de-CarouselFeature-image de-u-bgWhite js-de-SlickCarouselSlide"
                  {% if color == activeColor and forloop.index0 == start_index %}
                    src="{{ image_src }}"
                    srcset="{{ image_srcset }}"
                    sizes="{{ image_sizes }}"
                  {% else %}
                    data-carousel-src="{{ image_src }}"
                    data-srcset="{{ image_srcset }}"
                    data-sizes="{{ image_sizes }}"
                  {% endif %}
                  alt="{% include 'func-extract-alt-copy' with alt %}">
              </button>
            </div>
          {%- endunless -%}
        {%- endif -%}
      {%- endfor -%}
    </div>
    {% comment %}
      Thumbnail images
    {% endcomment %}
    <div
      class="de-CarouselThumbnail
              {% if color == activeColor %}de-is-active{% endif %}
              js-de-SlickCarousel js-de-SlickCarouselThumbnail"
      data-carousel-color="{{- all_colors_array[forloop.index0] -}}">
      {%- for product_image in product_images -%}
        {% assign image_src = product_image | img_url: "150x", format: "pjpg" %}
        {% capture image_srcset %}
          {{ product_image | img_url: "75x", format: "pjpg" }} 75w,
          {{ product_image | img_url: "100x", format: "pjpg" }} 100w,
          {{ product_image | img_url: "150x", format: "pjpg" }} 150w,
          {{ product_image | img_url: "200x", format: "pjpg" }} 200w,
          {{ product_image | img_url: "240x", format: "pjpg" }} 240w,
          {{ product_image | img_url: "350x", format: "pjpg" }} 350w,
          {{ product_image | img_url: "451x", format: "pjpg" }} 451w,
          {{ product_image | img_url: "550x", format: "pjpg" }} 550w,
          {{ product_image | img_url: "600x", format: "pjpg" }} 600w
        {% endcapture %}
        {% capture image_sizes %}
          7.8vw
        {% endcapture %}
        {%- if forloop.index0 >= start_index and forloop.index0 < end_index -%}
          {%- unless product_image.alt contains context_photo_delimiter %}
            <div class="de-SlickSlide de-u-spaceBottom06
              de-CarouselThumbnail-slide"
              aria-controls="de-CarouselFeature"
              aria-roledescription="slide"
              role="group"
              aria-label="Product thumbnail image {{ forloop.index | minus: start_index }} of {{ end_index | minus: start_index }}">
              <button class="de-CarouselThumbnail-btn de-u-block">
                <img class="de-CarouselThumbnail-image de-u-bgSilver js-de-SlickCarouselSlide"
                {% if color == activeColor %}
                  src="{{ image_src }}"
                  srcset="{{ image_srcset }}"
                  sizes="{{ image_sizes }}"
                {% else %}
                  data-carousel-src="{{ image_src }}"
                  data-srcset="{{ image_srcset }}"
                  data-sizes="{{ image_sizes }}"
                {% endif %}
                  alt="">
              </button>
            </div>
          {%- endunless -%}
        {%- endif -%}
      {%- endfor -%}
    </div>

    {% if product_video.size < 1 %}
      {% include 'product-gallery-controls' with
        class: 'de-CarouselControls--overlay de-u-lg-hidden',
        display_toggle: false %}
    {% endif %}

  </section>
{%- endfor -%}
